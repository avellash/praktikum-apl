#include <iostream>
using namespace std;

//* deference
//& address of
struct Orang{
    string nama;
    int umur;
}:

int main(){

    //..
    //.
    int primeNumber[6] = {
        2,3,5,7,11
    };
    int (*ptrPrimeNumber[6]) = &primeNumber;
    for (int i = 0; i < 6; i++)
    {
        cout << (*ptrPrimeNumber)[i]<<endl;
    }

    //. 
    cout << "Pointer yang menunjuk ";
    cout << "ke arah elemen array"<<endl;
    int b[5] = {1,2,3,4,5,};
    int *bPtr = b;
    for (int i = 0; i < 5; i++){
        cout << bPtr <<endl;
        cout << *bPtr <<endl;
        bPtr++;
    }

    //..
    //.struct
    Orang orang;
    orang.nama = "Kalingga";
    orang.umur = 20;

    Orang* orang2 = &orang;

    cout << orang.nama<<endl;
    cout << orang2->nama<<endl;



    //..
    //.
    int stack = 64;
    int stackSnowball = 16; 

    //.
    int isis = stack;
    cout << stack<<endl;
    cout << isi<<endl;
    stack = 69;

    int  *isi = &stack;
    //.

    cout << stack<<endl;
    cout << *isi<<endl;

    stack = 16;
    cout <<"---Setelah di ubah---"<<endl;
    cout << stack<<endl;
    cout << *isi<<endl;
    //.


    //.
    cout <<"stack:" << stack<<endl;
    cout <<"&stack:" << &stack<<endl;

    cout <<"stackSnowball:" << stackSnowball<<endl;
    cout <<"&stackSnowball:" << &stackSnowball<<endl;

    //.
    int stack = 10;
    int* ptrStack = &stack;

    int ** ptrPtrStack = &ptrStack;

    cout << *ptrPtrStack<<endl;
    cout << **ptrPtrStack<<endl;

    return 0;
}